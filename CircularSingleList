import java.util.*;
class Node
{
	int data;
	Node next;
	
	Node(int x)
	{
		data=x;
		next=null;
	}
}

class CircularSingleList
{
	Node head;
	CircularSingleList()
	{
		head=null;
	}
	
	void create(int x)
	{
		Node n=new Node(x);
		if(head==null)
		{
			head=n;
			n.next=head;
		}
		else
		{
			Node temp=head;
			while(temp.next!=head)
			{ 
			   temp=temp.next;
			}
			n.next=head;
			temp.next=n;
		}
	}

	void display()
	{
		if(head==null)
		{
		   System.out.println("List is empty");
		   return;
		}
		Node temp=head;
		while(temp.next!=head)
		{
			System.out.print(temp.data+" ");
			temp=temp.next;
		}
		System.out.print(temp.data);
	}

	void insertFirst(int x)
	{
		Node n=new Node(x);
		if(head==null)
		{
			head=n;
			n.next=head;
		}
		else
		{
			Node temp=head;
			while(temp.next!=head)
			{ 
			   temp=temp.next;
			}
			n.next=head;
			temp.next=n;
			head=n;
		}
	}	
	
	void insertPosition(int x,int pos)
	{
		Node n=new Node(x);
		if(head==null)
		{
			head=n;
			n.next=head;
		}
		else if(pos==1)
		{
			Node temp=head;
			while(temp.next!=head)
			{ 
			   temp=temp.next;
			}
			n.next=head;
			temp.next=n;
			head=n;
		}
		else
		{
			Node temp=head;
			int c=2;
			while(c<pos && temp.next!=head)
			{ 
			   c++;
			   temp=temp.next;
			}
			if(temp.next==head)
			{
				n.next=head;
				temp.next=n;
			}
			else
			{
				n.next=temp.next;
				temp.next=n;
			}
		}
	}

	void deleteFirst()
	{
		if(head==null)
		{
			System.out.println("List is empty");
			return;
		}
		if(head.next==head)
			head=null;
		else
		{
			Node temp=head;
			while(temp.next!=head)
			{
				temp=temp.next;
			}
			Node temp1=head;
			head=head.next;
			temp.next=head;
			temp1=null;
		}
	}

	void deleteLast()
	{
		if(head==null)
		{
			System.out.println("List is empty");
			return;
		}
		if(head.next==head)
			head=null;
		else
		{
			Node temp=head;
			while(temp.next.next!=head)
			{
				temp=temp.next;
			}
			Node temp1=temp.next;
			temp.next=head;
			temp1=null;
		}
	}

	void deletePosition(int pos)
	{
		if(head==null)
		{
			System.out.println("List is empty");
			return;
		}
		if(head.next==head)
			head=null;
		else if(pos==1)
		{
			Node temp=head;
			while(temp.next!=head)
			{
				temp=temp.next;
			}
			Node temp1=head;
			head=head.next;
			temp.next=head;
		}
		else
		{
			int c=2;
			Node temp=head;
			while(c<pos && temp.next.next!=head)
			{
				c++;
				temp=temp.next;
			}
			if(temp.next.next==head)
			{
				Node temp1=temp.next;
				temp.next=head;
				temp1=null;
			}
			else
			{
				Node temp1=temp.next;
				temp.next=temp.next.next;
				temp1=null;
			}
		}
	}
}

class Test
{
public static void main(String args[])
{
    Scanner s=new Scanner(System.in);
    CircularSingleList c1=new CircularSingleList();
    for(;;)
    {
	System.out.println();
	System.out.println("1.Create\n2.Print\n3.InsertFirst\n4.InsertPosition\n5.DeleteFirst\n6.DeleteLast\n7.DeletePosition\n8.Exit");
	System.out.println("Enter your choice");
	int ch=s.nextInt();
	if(ch==1)
	{
		System.out.println("Enter an element");
		int x=s.nextInt();
		c1.create(x);
	}
	else if(ch==2)
		c1.display();
	else if(ch==3)
	{
		System.out.println("Enter element");
		int x=s.nextInt();
		c1.insertFirst(x);
	}
	else if(ch==4)
	{
	   System.out.println("Enter element and position");
		int x=s.nextInt();
		int pos=s.nextInt();
		c1.insertPosition(x,pos);
	}
	else if(ch==5)
		c1.deleteFirst();
	else if(ch==6)
		c1.deleteLast();
	else if(ch==7)
	{
	     System.out.println("Enter position to delete");
		int pos=s.nextInt();
		c1.deletePosition(pos);
	}
	else if(ch==8)
		break;
	else
		System.out.println("Invalid choice");
    }	
}
}
OUTPUT:
C:\Users\pavan>cd desktop

C:\Users\pavan\Desktop>cd DSA

C:\Users\pavan\Desktop\DSA>javac TestSL.java

C:\Users\pavan\Desktop\DSA>java TestSL

1.Create
2.Print
3.InsertFirst
4.Insert any position
5.Delete First
6.Delete Last
7.Delete any position
8.Exit
Enter your choice
1
Enter an Element
12

1.Create
2.Print
3.InsertFirst
4.Insert any position
5.Delete First
6.Delete Last
7.Delete any position
8.Exit
Enter your choice
1
Enter an Element
13

1.Create
2.Print
3.InsertFirst
4.Insert any position
5.Delete First
6.Delete Last
7.Delete any position
8.Exit
Enter your choice
1
Enter an Element
14

1.Create
2.Print
3.InsertFirst
4.Insert any position
5.Delete First
6.Delete Last
7.Delete any position
8.Exit
Enter your choice
1
Enter an Element
15

1.Create
2.Print
3.InsertFirst
4.Insert any position
5.Delete First
6.Delete Last
7.Delete any position
8.Exit
Enter your choice
1
Enter an Element
16

1.Create
2.Print
3.InsertFirst
4.Insert any position
5.Delete First
6.Delete Last
7.Delete any position
8.Exit
Enter your choice
1
Enter an Element
17

1.Create
2.Print
3.InsertFirst
4.Insert any position
5.Delete First
6.Delete Last
7.Delete any position
8.Exit
Enter your choice
1
Enter an Element
18

1.Create
2.Print
3.InsertFirst
4.Insert any position
5.Delete First
6.Delete Last
7.Delete any position
8.Exit
Enter your choice
1
Enter an Element
19

1.Create
2.Print
3.InsertFirst
4.Insert any position
5.Delete First
6.Delete Last
7.Delete any position
8.Exit
Enter your choice
1
Enter an Element
20

1.Create
2.Print
3.InsertFirst
4.Insert any position
5.Delete First
6.Delete Last
7.Delete any position
8.Exit
Enter your choice
2
12
13
14
15
16
17
18
19
20

1.Create
2.Print
3.InsertFirst
4.Insert any position
5.Delete First
6.Delete Last
7.Delete any position
8.Exit
Enter your choice
3
Enter an element
45

1.Create
2.Print
3.InsertFirst
4.Insert any position
5.Delete First
6.Delete Last
7.Delete any position
8.Exit
Enter your choice
22
Invalid choice

1.Create
2.Print
3.InsertFirst
4.Insert any position
5.Delete First
6.Delete Last
7.Delete any position
8.Exit
Enter your choice
2
45
12
13
14
15
16
17
18
19
20

1.Create
2.Print
3.InsertFirst
4.Insert any position
5.Delete First
6.Delete Last
7.Delete any position
8.Exit
Enter your choice
4
Enter element and Position
89

2

1.Create
2.Print
3.InsertFirst
4.Insert any position
5.Delete First
6.Delete Last
7.Delete any position
8.Exit
Enter your choice
2
45
89
12
13
14
15
16
17
18
19
20

1.Create
2.Print
3.InsertFirst
4.Insert any position
5.Delete First
6.Delete Last
7.Delete any position
8.Exit
Enter your choice
5
45is deleted

1.Create
2.Print
3.InsertFirst
4.Insert any position
5.Delete First
6.Delete Last
7.Delete any position
8.Exit
Enter your choice
2
89
12
13
14
15
16
17
18
19
20

1.Create
2.Print
3.InsertFirst
4.Insert any position
5.Delete First
6.Delete Last
7.Delete any position
8.Exit
Enter your choice
6
13is deleted
Exception in thread "main" java.lang.NullPointerException
        at SingleList.deleteLast(TestSL.java:123)
        at TestSL.main(TestSL.java:219)

C:\Users\pavan\Desktop\DSA>javac Test20.java

C:\Users\pavan\Desktop\DSA>java Test20

1.Create
2.Print
3.InsertFirst
4.InsertPosition
5.DeleteFirst
6.DeleteLast
7.DeletePosition
8.Exit
Enter your choice
1
Enter an element
12

1.Create
2.Print
3.InsertFirst
4.InsertPosition
5.DeleteFirst
6.DeleteLast
7.DeletePosition
8.Exit
Enter your choice
1
Enter an element
12

1.Create
2.Print
3.InsertFirst
4.InsertPosition
5.DeleteFirst
6.DeleteLast
7.DeletePosition
8.Exit
Enter your choice
1
Enter an element
13

1.Create
2.Print
3.InsertFirst
4.InsertPosition
5.DeleteFirst
6.DeleteLast
7.DeletePosition
8.Exit
Enter your choice
1
Enter an element
14

1.Create
2.Print
3.InsertFirst
4.InsertPosition
5.DeleteFirst
6.DeleteLast
7.DeletePosition
8.Exit
Enter your choice
1
Enter an element
1

1.Create
2.Print
3.InsertFirst
4.InsertPosition
5.DeleteFirst
6.DeleteLast
7.DeletePosition
8.Exit
Enter your choice
1
Enter an element
15

1.Create
2.Print
3.InsertFirst
4.InsertPosition
5.DeleteFirst
6.DeleteLast
7.DeletePosition
8.Exit
Enter your choice
1
Enter an element
16

1.Create
2.Print
3.InsertFirst
4.InsertPosition
5.DeleteFirst
6.DeleteLast
7.DeletePosition
8.Exit
Enter your choice
1
Enter an element
16

1.Create
2.Print
3.InsertFirst
4.InsertPosition
5.DeleteFirst
6.DeleteLast
7.DeletePosition
8.Exit
Enter your choice
1
Enter an element
17

1.Create
2.Print
3.InsertFirst
4.InsertPosition
5.DeleteFirst
6.DeleteLast
7.DeletePosition
8.Exit
Enter your choice
1
Enter an element
18

1.Create
2.Print
3.InsertFirst
4.InsertPosition
5.DeleteFirst
6.DeleteLast
7.DeletePosition
8.Exit
Enter your choice
1
Enter an element
19

1.Create
2.Print
3.InsertFirst
4.InsertPosition
5.DeleteFirst
6.DeleteLast
7.DeletePosition
8.Exit
Enter your choice
1
Enter an element
20

1.Create
2.Print
3.InsertFirst
4.InsertPosition
5.DeleteFirst
6.DeleteLast
7.DeletePosition
8.Exit
Enter your choice
2
12 12 13 14 1 15 16 16 17 18 19 20
1.Create
2.Print
3.InsertFirst
4.InsertPosition
5.DeleteFirst
6.DeleteLast
7.DeletePosition
8.Exit
Enter your choice
3
Enter element
233

1.Create
2.Print
3.InsertFirst
4.InsertPosition
5.DeleteFirst
6.DeleteLast
7.DeletePosition
8.Exit
Enter your choice
2
233 12 12 13 14 1 15 16 16 17 18 19 20
1.Create
2.Print
3.InsertFirst
4.InsertPosition
5.DeleteFirst
6.DeleteLast
7.DeletePosition
8.Exit
Enter your choice
4
Enter element and position
456 6

1.Create
2.Print
3.InsertFirst
4.InsertPosition
5.DeleteFirst
6.DeleteLast
7.DeletePosition
8.Exit
Enter your choice
2
233 12 12 13 14 456 1 15 16 16 17 18 19 20
1.Create
2.Print
3.InsertFirst
4.InsertPosition
5.DeleteFirst
6.DeleteLast
7.DeletePosition
8.Exit
Enter your choice
8
